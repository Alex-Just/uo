sudo: true
addons:
  postgresql: '9.5'

env:
  global:
  - DJANGO_SETTINGS_MODULE="config.settings.test"
  - PYTHONPATH="/home/travis/build/Alex-Just/uo"
  - PIP_USE_MIRRORS=true

before_install:
- sudo apt-get update -qq
- sudo apt-get install -qq build-essential gettext python-dev zlib1g-dev libpq-dev
  xvfb
- sudo apt-get install -qq libtiff4-dev libjpeg8-dev libfreetype6-dev liblcms1-dev
  libwebp-dev
- sudo apt-get install -qq graphviz-dev python-setuptools python3-dev python-virtualenv
  python-pip
- sudo apt-get install -qq firefox automake libtool libreadline6 libreadline6-dev
  libreadline-dev
- sudo apt-get install -qq libsqlite3-dev libxml2 libxml2-dev libssl-dev libbz2-dev
  wget curl llvm

matrix:
  include:

  - language: python
    python: 3.6.2
    install:
    - pip install -r backend/requirements/test.txt
    - pip install coveralls
    script:
    - coverage run backend/manage.py test backend
    after_success:
    - coveralls
    deploy:
      provider: heroku
      api_key:
        # TODO: Put this in an env var
        secure: Z5K45aQAYb/4stoBJzHFp0JdZF+M8HIuxvMbS6DeDLpA7PbiKMPZy1tZC5S4P2GVFdK2yNpfegqKIKmG6sP0pXZPTlk8VYeMYCfYsqJTWax2ycTP8gyTmzSMIZbAC2H3DvR8E5IQxj0jHgQxNvpPReXFXUpqM8px89rCi9LS6RW/UgT+hx+MwTnZdcqSRm+60UTpuJzOp8Lxf7YUvTjHiLzafdnwSYw5DAlVF1ayWQ0sSvJnfU6Jc/EwyEUBTLbogxnJR8z89nAZdPN/6ru60sA+mZefdRRWSM7jC5pZvO/voIhCiEJ8bqfjonkdciTes26QVpv0/sfVQEElkDb+jS2ElTCpf3pMQG8CYEqCCvD5bBQ1T+/s2btCDjoDLAObnHgPnRAfEa2ZgRdelk+De0YUvYluuaxIXiuhNN4ja7UKQx87BkMUleDNJSbrWvE7fqv4kTeydFNWsmdD5E50ZmAvWX/5+/HGPBa360qxWgoMYRXQcJ252kRWN/bbi+LnvoRCDK4ndUMM9jKISbllzMn9dNTP1a0WnL4buDZaBWuv7ko3BIkKDWvVsWssFmLew7LPHqGNWFnXGTDVKhDaXEEtv/NmbZ9aiK9qUihUoXZGD93QLAxvGzgq2wCWJyCHyeVB6gSNF5nHCjBkEVw22ap+ZuqUu3cO6WgZsdF/uVM=
      app: u-o
      on:
        repo: Alex-Just/uo
      strategy: git
      before_deploy:
      - find . -maxdepth 1 -type f -delete # remove all files in root folder
      - rm -rf frontend
      - rm -rf compose
      - cp -R ./backend/* .
      - rm -rf backend

  - language: node_js
    node_js: 8.2.1
    install:
    - cd ./frontend
    - yarn install
    - npm install -g codeclimate-test-reporter
    - npm install -g netlify-cli
    script:
    - npm test
    - npm build
    after_success:
    - CODECLIMATE_REPO_TOKEN=$CODECLIMATE_REPO_TOKEN codeclimate-test-reporter < ./coverage/lcov.info
    - netlify deploy -s $NETLIFY_API_ID -t $NETLIFY_PERSONAL_ACCESS_TOKEN -p ./build
